from aiogram.types import (
    InlineKeyboardMarkup, 
    InlineKeyboardButton,
    ReplyKeyboardMarkup,
    KeyboardButton
)

from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram import types


def get_start_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text="üí¨ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è", 
            callback_data="consultation"
        )],
        [InlineKeyboardButton(
            text="üì∑ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏—é",
            callback_data="view_collection"
        )],
        [InlineKeyboardButton(
            text="üå∏ –ó–∞–∫–∞–∑–∞—Ç—å –±—É–∫–µ—Ç –ø–æ–¥ –∂–µ–ª–∞–Ω–∏–µ",
            callback_data="order_bouquet"
        )],
    ])


def get_preferred_option():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text="üìû –ü–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É", 
            callback_data="by_phone"
        )],
        [InlineKeyboardButton(
            text="üí¨ –í —á–∞—Ç–µ",
            callback_data="in_chat"
        )]
    ])


def get_phone_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(
                text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
                request_contact=True
            )]
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )


def get_consultation_keyboard(user_id):
    builder = InlineKeyboardBuilder()
    builder.button(
        text="üì® –û—Ç–≤–µ—Ç–∏—Ç—å",
        url=f"tg://user?id={user_id}"
    )
    return builder.as_markup()


def get_theme_bouquet():
    builder = InlineKeyboardBuilder()
    builder.row(
        types.InlineKeyboardButton(
            text="üéÇ –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è",
            callback_data="birthday"
        ),
        types.InlineKeyboardButton(
            text="üíç –°–≤–∞–¥—å–±–∞",
            callback_data="wedding"
        )
    )
    builder.row(
        types.InlineKeyboardButton(text="üè´ –í —à–∫–æ–ª—É", callback_data="school"),
        types.InlineKeyboardButton(
            text="üåπ –ë–µ–∑ –ø–æ–≤–æ–¥–∞",
            callback_data="no_reson"
        )
    )
    builder.row(
        types.InlineKeyboardButton(
            text="‚úèÔ∏è –î—Ä—É–≥–æ–π –ø–æ–≤–æ–¥",
            callback_data="custom"
        )
    )
    return builder.as_markup()


def get_bouquet_keyboard(current_index: int, total: int, bouquet_id: int):
    builder = InlineKeyboardBuilder()

    builder.button(
        text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
        callback_data=f"prev_{current_index}"
    )

    builder.button(text="üõí –ó–∞–∫–∞–∑–∞—Ç—å", callback_data=f"order_{bouquet_id}")

    builder.button(
        text="–í–ø–µ—Ä–µ–¥ ‚ñ∂Ô∏è",
        callback_data=f"next_{current_index}"
    )

    builder.adjust(3)
    return builder.as_markup()


def get_price_keyboards():
    builder = InlineKeyboardBuilder()
    builder.row(
        types.InlineKeyboardButton(
            text="~500 —Ä—É–±.",
            callback_data="500"
        ),
        types.InlineKeyboardButton(
            text="~1000 —Ä—É–±.",
            callback_data="1000"
        )
    )
    builder.row(
        types.InlineKeyboardButton(text="~2000 —Ä—É–±.", callback_data="2000"),
        types.InlineKeyboardButton(
            text="–ë–æ–ª—å—à–µ.",
            callback_data="more"
        )
    )
    builder.row(
        types.InlineKeyboardButton(
            text="–ù–µ –≤–∞–∂–Ω–æ",
            callback_data="no_matter"
        )
    )
    return builder.as_markup()
