import asyncio
import os
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import (
    BotCommand,
    InlineKeyboardMarkup,
    InlineKeyboardButton
)
from bot_data.handlers import register_handlers
from dotenv import load_dotenv
from textwrap import dedent

bot = Bot(token=os.environ['TG_BOT_TOKEN'])
dispatcher = Dispatcher()


async def set_menu_commands(bot: Bot):
    await bot.set_my_commands([
        BotCommand(command="start", description="–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞")
    ])


@dispatcher.message(Command("start"))
async def start(message: types.Message):
    await message.answer(dedent("""\
                –ó–∞–∫–∞–∂–∏—Ç–µ –¥–æ—Å—Ç–∞–≤–∫—É –ø—Ä–∞–∑–¥–Ω–∏—á–Ω–æ–≥–æ –±—É–∫–µ—Ç–∞ üíê
                —Å–æ–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –≤–∞—à–∏—Ö –ª—é–±–∏–º—ã—Ö,
                —Ä–æ–¥–Ω—ã—Ö –∏ –∫–æ–ª–ª–µ–≥ ‚ù§Ô∏è.
                –ù–∞—à –±—É–∫–µ—Ç —Å–æ —Å–º—ã—Å–ª–æ–º —Å—Ç–∞–Ω–µ—Ç –≥–ª–∞–≤–Ω—ã–º
                –ø–æ–¥–∞—Ä–∫–æ–º –Ω–∞ –≤–∞—à–µ–º –ø—Ä–∞–∑–¥–Ω–∏–∫–µ üòä
    """))
    inline_kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è", callback_data="btn1")],
        [InlineKeyboardButton(
            text="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏—é",
            callback_data="btn2"
        )],
        [InlineKeyboardButton(
            text="–ó–∞–∫–∞–∑–∞—Ç—å –±—É–∫–µ—Ç –ø–æ–¥ –∂–µ–ª–∞–Ω–∏–µ",
            callback_data="btn2"
        )],
    ])
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=inline_kb)


async def main():
    load_dotenv()

    if not bot.token:
        print(dedent("""\
            –û—à–∏–±–∫–∞: –ù–µ —É–∫–∞–∑–∞–Ω TG_BOT_TOKEN.
            –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –∑–∞–¥–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.
        """))
        return

    await set_menu_commands(bot)

    register_handlers(dispatcher)

    await bot.delete_webhook(drop_pending_updates=True)
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    await dispatcher.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
